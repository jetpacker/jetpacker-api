server:
  port: 5000

jetpacker:
  machine:
    name: ubuntu
    label: Ubuntu
    description: Ubuntu is an open source software platform that runs from the cloud, to the smartphone, to all your things.
    box:
      name: box
      label: Box
      releases:
        ubuntu/trusty64: Ubuntu Trusty Tahr 64
        ubuntu/trusty32: Ubuntu Trusty Tahr 32
    memory: { name: memory, label: Memory (MB), value: 4096 }
    timezone: { name: timezone, label: Timezone }

  kits:
    openjdk:
      name: openjdk
      label: OpenJDK
      description: OpenJDK (Open Java Development Kit) is a free and open source implementation of the Java Platform, Standard Edition.
      repository: SdkMan
      version:
        name: version
        label: Version
        releases: [ 8, 7 ]
      install: { name: install, label: Install OpenJDK, value: true }

    node:
      name: node
      namespace: nodejs
      label: Node.js
      description: Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.
      repository: GitHub
      version: { name: version, label: Version }
      install: { name: install, label: Install Node, value: false }
      dependency:
        name: nvm
        namespace: creationix
        label: Node Version Manager
        repository: GitHub
        version: { name: version, label: Version }
      extensions:
        - name: vue-cli
          namespace: vuejs
          label: Vue.js (CLI)
          repository: GitHub
          version: { name: version, label: Version }
        - name: cli
          namespace: aurelia
          label: Aurelia (CLI)
          alias: aurelia-cli
          repository: GitHub
          version: { name: version, label: Version }
        - name: ember-cli
          namespace: ember-cli
          label: Ember.js (CLI)
          repository: GitHub
          version: { name: version, label: Version }
        - name: angular-cli
          namespace: angular
          label: Angular (CLI)
          repository: GitHub
          version: { name: version, label: Version }
        - name: create-react-app
          namespace: facebookincubator
          label: React (CLI)
          repository: GitHub
          version: { name: version, label: Version }

    guard:
      name: guard
      label: Guard
      description: Guard is a command line tool to easily handle events on file system modifications.
      install: { name: install, label: Install Guard, value: false }
      dependency:
        name: ruby
        namespace: ruby
        label: Ruby
        repository: GitHub
        version: { name: version, label: Version }

  containers:
    # data stores
    - name: mysql
      label: MySQL
      description: MySQL is the most popular Open Source SQL database management system.
      type: DataStore
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install MySQL, value: true }
      volumes:
        - host: '{{ mysql.configuration }}'
          container: /etc/mysql/conf.d
        - host: '{{ mysql.data }}'
          container: /var/lib/mysql
      publishedPorts:
        - host: '{{ mysql.port }}'
          container: 3306
      environmentVariables:
        MYSQL_ROOT_PASSWORD: '{{ mysql.root_password }}'
        MYSQL_DATABASE: '{{ mysql.database }}'
      parameters:
        - { name: root_password, label: Root Password, value: root }
        - { name: database, label: Database }
        - { name: port, label: Port, value: 3306 }

    - name: mariadb
      label: MariaDB
      description: MariaDB is an enhanced, drop-in replacement for MySQL.
      type: DataStore
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install MariaDB, value: false }
      volumes:
        - host: '{{ mariadb.configuration }}'
          container: /etc/mysql/conf.d
        - host: '{{ mariadb.data }}'
          container: /var/lib/mariadb
      publishedPorts:
        - host: '{{ mariadb.port }}'
          container: 3306
      environmentVariables:
        MYSQL_ROOT_PASSWORD: '{{ mariadb.root_password }}'
        MYSQL_DATABASE: '{{ mariadb.database }}'
      parameters:
        - { name: root_password, label: Root Password, value: root }
        - { name: database, label: Database }
        - { name: port, label: Port, value: 3306 }

    - name: postgres
      label: PostgreSQL
      description: PostgreSQL is a powerful, open source object-relational database system.
      type: DataStore
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install PostgreSQL, value: false }
      volumes:
        - host: '{{ postgres.data }}'
          container: /var/lib/postgresql/data/pgdata
      publishedPorts:
        - host: '{{ postgres.port }}'
          container: 5432
      environmentVariables:
        POSTGRES_USER: '{{ postgres.user }}'
        POSTGRES_PASSWORD: '{{ postgres.password }}'
        POSTGRES_DB: '{{ postgres.database }}'
        PGDATA : /var/lib/postgresql/data/pgdata
      parameters:
        - { name: user, label: User, value: root }
        - { name: password, label: Password, value: root }
        - { name: database, label: Database }
        - { name: port, label: Port, value: 5432 }

    - name: mongo
      label: MongoDB
      description: MongoDB is an open-source, document database designed for ease of development and scaling.
      type: DataStore
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install MongoDB, value: false }
      volumes:
        - host: '{{ mongo.data }}'
          container: /data/db
      publishedPorts:
        - host: '{{ mongo.port }}'
          container: 27017
      parameters:
        - { name: port, label: Port, value: 27017 }

    - name: redis
      label: Redis
      description: Redis is an open source (BSD licensed), in-memory data structure store, used as database, cache and message broker.
      type: DataStore
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install Redis, value: false }
      command: redis-server --appendonly yes
      volumes:
        - host: '{{ redis.configuration }}'
          container: /usr/local/etc/redis
        - host: '{{ redis.data }}/redis'
          container: /data
      publishedPorts:
        - host: '{{ redis.port }}'
          container: 6379
      parameters:
        - { name: port, label: Port, value: 6379 }

    # message brokers
    - name: rabbitmq
      label: RabbitMQ
      suffix: -management
      description: RabbitMQ is a lightweight, reliable, scalable and portable message broker.
      type: MessageBroker
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install RabbitMQ, value: false }
      volumes:
        - host: '{{ rabbitmq.data }}'
          container: /var/lib/rabbitmq
      publishedPorts:
        - host: '{{ rabbitmq.port }}'
          container: 5672
        - host: '{{ rabbitmq.management_port }}'
          container: 15672
      environmentVariables:
        RABBITMQ_DEFAULT_USER: '{{ rabbitmq.user }}'
        RABBITMQ_DEFAULT_PASS: '{{ rabbitmq.password }}'
        RABBITMQ_NODE_NAME: '{{ rabbitmq.node_name }}'
        RABBITMQ_ERLANG_COOKIE: '{{ rabbitmq.cookie }}'
      parameters:
        - { name: user, label: User, value: rabbitmq }
        - { name: password, label: Password, value: rabbitmq }
        - { name: node_name, label: Node Name, value: node@rabbitmq }
        - { name: erlang_cookie, label: Erlang Cookie, value: rabbitmq_erlang_cookie }
        - { name: port, label: Port, value: 5672 }
        - { name: management_port, label: Management Port, value: 15672 }

    # search engines
    - name: elasticsearch
      label: ElasticSearch
      description: Elasticsearch is a distributed, open source search and analytics engine, designed for horizontal scalability, reliability, and easy management.
      type: SearchEngine
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install ElasticSearch, value: false }

    - name: solr
      label: Solr
      description: Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene.
      type: SearchEngine
      repository: DockerHub
      version: { name: version, label: Version }
      install: { name: install, label: Install Solr, value: false }